#! /usr/bin/env ruby
require 'eventmachine'
require 'arpoon'
require 'optparse'

options = {}

OptionParser.new do |o|
	options[:socket] = '/var/run/arpoon.ctl'

	o.on '-e', '--execute', 'enable execute mode' do
		options[:execute] = true
	end

	o.on '-s', '--socket PATH', 'path to the UNIX socket' do |value|
		options[:socket] = File.expand_path(value)
	end

	o.on '-r', '--raw', 'send a raw JSON string' do |value|
		options[:raw] = true
	end
end.parse!

if options[:execute]
	require 'arpoon/client'

	Arpoon::Client.new(options[:socket]).tap {|c|
		if options[:raw]
			c.puts ARGV.join ' '
		else
			c.send_request *ARGV
		end
	}

	UNIXSocket.new(options[:socket]).tap {|s|
		s.puts options[:raw] ? ARGV.join(' ') : ARGV.to_json
	}

	exit!
end

EM.run {
	a = Arpoon.load(ARGV.first || '/etc/arpoon.rc')
	a.start

	EM.error_handler {|e|
		$stderr.puts e.message
		$stderr.puts e.backtrace.join("\n")
	}

	%w[INT KILL].each {|sig|
		trap sig do
			a.stop
			
			EM.stop_event_loop
		end
	}
}
